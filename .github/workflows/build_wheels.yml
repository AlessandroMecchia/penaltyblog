name: Build Wheels

on:
  workflow_dispatch:

jobs:
  build_wheels:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Upgrade pip and install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          pip install cibuildwheel

      - name: Install dependencies with pre-built wheels
        run: |
          pip install --only-binary=:all: numpy pandas

      - name: Build wheels
        run: cibuildwheel --output-dir wheelhouse .

      - name: Upload built wheels
        uses: actions/upload-artifact@v4  # Use v4
        with:
          name: wheels
          path: wheelhouse/*.whl

  build_sdist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install build
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4  # Use v4
        with:
          name: sdist
          path: dist/*.tar.gz

  verify_wheels:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v4  # Use v4
        with:
          name: wheels
          path: dist-artifacts/wheels

      - name: Download sdist artifact
        uses: actions/download-artifact@v4  # Use v4
        with:
          name: sdist
          path: dist-artifacts/sdist

      - name: Prepare distribution files
        run: |
          mkdir -p dist
          find dist-artifacts -name "*.whl" -exec cp {} dist/ \;
          find dist-artifacts -name "*.tar.gz" -exec cp {} dist/ \;
          ls -la dist/

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Verify wheel structure
        run: |
          pip install twine check-wheel-contents
          twine check dist/*
          check-wheel-contents dist/*.whl
